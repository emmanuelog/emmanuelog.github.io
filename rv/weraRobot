<!doctype html>
  <html>
    <head>
      <title>Robot</title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
      <style>
      body {margin: 0;}
      canvas {width: 100%; height: 100%}
      </style>
    </head>
    <body>
      <script src="three.min.js"></script>
      <script>
      
      function setup(){
        THREE.ImageUtils.crossOrigin='';
  var textura = THREE.ImageUtils.loadTexture('http://akata93.github.io/r2d2.jpg');
        var material = new THREE.MeshPhongMaterial({map: textura });
        
var figurabasepie=new THREE.Shape();
        figurabasepie.moveTo(8,-35);
        figurabasepie.lineTo(5,-32);
        figurabasepie.lineTo(-5,-32);
        figurabasepie.lineTo(-8,-35);
        figurabasepie.lineTo(8,-35);
        
        var formabasepie=new THREE.ExtrudeGeometry(figurabasepie, {amount:10});
        
      
      var brazo1 = new THREE.CylinderGeometry( 4, 4, 50, 100 );
      var brazo2 = new THREE.CylinderGeometry( 4, 4, 50, 100 );
      
      
        //Se plantean las geometrias a utilizar
        
        
//SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength)
var cabezaForma=new THREE.SphereGeometry(15, 100, 100);

var pared=new THREE.BoxGeometry(500, 100, 10);
//CylinderGeometry(radiusTop, radiusBottom, height, radiusSegments, heightSegments, openEnded, thetaStart, thetaLength)
var cuerpoForma=new THREE.CylinderGeometry(15, 15, 40, 100, 10);
var pie1Forma=new THREE.CylinderGeometry(5, 5, 10, 100, 10);
var ladrillo = THREE.ImageUtils.loadTexture('http://threejs.org/examples/textures/brick_diffuse.jpg');
  var material2 = new THREE.MeshNormalMaterial();


//Para generar una forma combinada se requiere de las mallas para poder desplazar las formas en el espacio virtrual.

var cabeza= new THREE.Mesh(cabezaForma,material);
var cuerpo= new THREE.Mesh(cuerpoForma,material);
var pie1=new THREE.Mesh(pie1Forma,material);
var mallabasepie=new THREE.Mesh(formabasepie,material);
var mallabrazo1= new THREE.Mesh(brazo1,material);
var mallabrazo2= new THREE.Mesh(brazo2,material);
var Pared1= new THREE.Mesh(pared, material2);
var Pared2= new THREE.Mesh(pared, material2);
var Pared3= new THREE.Mesh(pared, material2);
var Pared4= new THREE.Mesh(pared, material2);


//Se desplazan las mallas

cabeza.position.y=20;
pie1.position.y=-25;
mallabrazo1.position.x=18;
mallabrazo2.position.x=-18;
mallabrazo1.position.y=-10;
mallabrazo2.position.y=-10;

Pared1.position.x=250;
Pared1.position.x=-250;
Pared1.position.z=250;
Pared1.position.z=-250;

Pared2.position.x=250;
Pared2.position.x=-250;
Pared2.position.z=250;
Pared2.position.z=-250;

Pared3.position.x=250;
Pared3.position.x=-250;
Pared3.position.z=250;
Pared3.position.z=-250;

Pared4.position.x=250;
Pared4.position.x=-250;
Pared4.position.z=250;
Pared4.position.z=-250;
//Se genera una forma (geometria) abstracta.
var forma= new THREE.Geometry();
//Se utiliza el paquete GeometryUtils para conjuntar las formas.
THREE.GeometryUtils.merge(forma,cabeza);
THREE.GeometryUtils.merge(forma,cuerpo);
THREE.GeometryUtils.merge(forma,pie1);
THREE.GeometryUtils.merge(forma,formabasepie);
THREE.GeometryUtils.merge(forma,mallabrazo1);
THREE.GeometryUtils.merge(forma,mallabrazo2);


//Se genera la malla a partir de la forma

malla=new THREE.Mesh(forma, material);

//Se inicializa la escena y se agrega la malla a 

var luzPuntual = new THREE.PointLight(0xffffff);
  luzPuntual.position.x=500;
  luzPuntual.position.y=500;
  luzPuntual.position.z=500;
  
  var luzPuntual1 = new THREE.PointLight(0xffffff);
  luzPuntual1.position.x=-500;
  luzPuntual1.position.y=-500;
  luzPuntual1.position.z=500;
  var luzPuntual2 = new THREE.PointLight(0xffffff);
  luzPuntual2.position.x=0;
  luzPuntual2.position.y=500;
  luzPuntual2.position.z=0;

escena=new THREE.Scene();
escena.add(malla);
escena.add(luzPuntual);
escena.add(luzPuntual1);
escena.add(luzPuntual2);
/*escena.add(Pared1);
escena.add(Pared2);
escena.add(Pared3);
escena.add(Pared4);*/

var light = new THREE.AmbientLight( 0xffffff ); // soft white light
escena.add( light );

//Se inicializa la cámara y el renderer

camara=new THREE.PerspectiveCamera();
camara.position.z=200;
//camara.position.y=600;
//camara.rotation.x=-1.57;

renderer=new THREE.WebGLRenderer();
renderer.setSize(window.innerHeight*.95,window.innerHeight*.95);
document.body.appendChild(renderer.domElement);
}
function loop(){
  requestAnimationFrame(loop);
  
  //Es importante notar que las rotaciones son sobre los ejes que están fijos a la malla, nolos ejes del lienzo.
  //inicialmente amnos coinciden.
  
  malla.rotation.y+=0.01;
  //malla.rotation.y+=0.01;
  
  renderer.render(escena,camara);
  }
  
  var escena, camara, renderer, malla;
  setup();
  loop();
  
      </script>
    </body>
  </html>
